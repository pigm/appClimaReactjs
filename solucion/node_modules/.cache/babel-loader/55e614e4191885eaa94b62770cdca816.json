{"ast":null,"code":"import ServiceResult from '../Result/ServiceResult';\nimport { URLlogin, URLregister } from '../Properties/ServiceProperties';\nexport default class ServiceDelegate {\n  static async apiLogin(loginRquest) {\n    var serviceResult = new ServiceResult();\n    var param = JSON.stringify(loginRquest);\n    console.log(param);\n\n    try {\n      await fetch(URLlogin, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: param\n      }).then(response => {\n        return response.json();\n      }).then(responseJson => {\n        if (JSON.stringify(responseJson) != null) {\n          serviceResult.success = true;\n          serviceResult.message = 'Service Authentication ok';\n          serviceResult.responseBody = responseJson;\n          serviceResult.statusCode = 0;\n        } else {\n          serviceResult.success = false;\n          serviceResult.message = 'Service Authentication not ok';\n          serviceResult.responseBody = null;\n          serviceResult.statusCode = -100;\n        }\n      });\n    } catch (error) {\n      serviceResult.success = false;\n      serviceResult.message = 'Service Authentication not ok';\n      serviceResult.responseBody = null;\n      serviceResult.statusCode = -999;\n    }\n\n    console.log(serviceResult);\n    return serviceResult;\n  }\n\n  static async apiRegister(registerRquest) {\n    var serviceResult = new ServiceResult();\n    var param = JSON.stringify(registerRquest);\n\n    try {\n      await fetch(URLregister, {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: param\n      }).then(response => {\n        return response.json();\n      }).then(responseJson => {\n        if (JSON.stringify(responseJson) != null) {\n          serviceResult.success = true;\n          serviceResult.message = 'Service Authentication ok';\n          serviceResult.responseBody = responseJson;\n          serviceResult.statusCode = 0;\n        } else {\n          serviceResult.success = false;\n          serviceResult.message = 'Service Authentication not ok';\n          serviceResult.responseBody = null;\n          serviceResult.statusCode = -100;\n        }\n      });\n    } catch (error) {\n      serviceResult.success = false;\n      serviceResult.message = 'Service Authentication not ok';\n      serviceResult.responseBody = null;\n      serviceResult.statusCode = -999;\n    }\n\n    return serviceResult;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ntamayo.ADDS/Desktop/programacion/appClimaReactjs/solucion/src/Service/Delegate/ServiceDelegate.js"],"names":["ServiceResult","URLlogin","URLregister","ServiceDelegate","apiLogin","loginRquest","serviceResult","param","JSON","stringify","console","log","fetch","method","headers","Accept","body","then","response","json","responseJson","success","message","responseBody","statusCode","error","apiRegister","registerRquest"],"mappings":"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","sourcesContent":["import ServiceResult  from '../Result/ServiceResult';\r\nimport {\r\n  URLlogin, URLregister,\r\n} from '../Properties/ServiceProperties';\r\n\r\nexport default class ServiceDelegate {\r\n  \r\n  static async apiLogin(loginRquest){\r\n    var serviceResult = new ServiceResult();\r\n      var param = JSON.stringify(loginRquest);\r\n      console.log(param);\r\n        try {\r\n           await fetch(URLlogin, {\r\n            method: 'POST',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: param,\r\n          })\r\n          .then(response => {\r\n            return response.json();\r\n          })\r\n          .then(responseJson => {\r\n            if (JSON.stringify(responseJson) != null)\r\n            {\r\n              serviceResult.success = true;\r\n              serviceResult.message = 'Service Authentication ok';\r\n              serviceResult.responseBody = responseJson;\r\n              serviceResult.statusCode = 0;\r\n            }\r\n            else\r\n            {\r\n              serviceResult.success = false;\r\n              serviceResult.message = 'Service Authentication not ok';\r\n              serviceResult.responseBody = null;\r\n              serviceResult.statusCode = -100;\r\n            }\r\n          });\r\n        }\r\n        catch (error)\r\n        {\r\n            serviceResult.success = false;\r\n            serviceResult.message = 'Service Authentication not ok';\r\n            serviceResult.responseBody = null;\r\n            serviceResult.statusCode = -999;\r\n        }    \r\n        console.log(serviceResult);\r\n    return serviceResult; \r\n  }\r\n\r\n  static async apiRegister(registerRquest){\r\n    var serviceResult = new ServiceResult();\r\n      var param = JSON.stringify(registerRquest);\r\n        try {\r\n           await fetch(URLregister, {\r\n            method: 'POST',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: param,\r\n          })\r\n          .then(response => {\r\n            return response.json();\r\n          })\r\n          .then(responseJson => {\r\n            if (JSON.stringify(responseJson) != null)\r\n            {\r\n              serviceResult.success = true;\r\n              serviceResult.message = 'Service Authentication ok';\r\n              serviceResult.responseBody = responseJson;\r\n              serviceResult.statusCode = 0;\r\n            }\r\n            else\r\n            {\r\n              serviceResult.success = false;\r\n              serviceResult.message = 'Service Authentication not ok';\r\n              serviceResult.responseBody = null;\r\n              serviceResult.statusCode = -100;\r\n            }\r\n          });\r\n        }\r\n        catch (error)\r\n        {\r\n            serviceResult.success = false;\r\n            serviceResult.message = 'Service Authentication not ok';\r\n            serviceResult.responseBody = null;\r\n            serviceResult.statusCode = -999;\r\n        }    \r\n    return serviceResult; \r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}