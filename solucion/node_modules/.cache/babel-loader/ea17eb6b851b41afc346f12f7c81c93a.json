{"ast":null,"code":"import LoginMessage from './LoginMessage';\nimport Validation from '../../Util/Validation';\nimport DataManager from '../../Util/DataManager';\nimport LoginRequest from '../../Model/LoginModel/LoginRequest';\nimport LoginResponse from '../../Model/LoginModel/LoginResponse';\nimport ServiceDelegate from '../../Service/Delegate/ServiceDelegate';\nexport default class LoginBusiness {\n  static async accessSession(username, password) {\n    var result = false;\n\n    if ((username != null || username !== '') && Validation.validateEmail(username) && password != null && password !== '') {\n      var loginRequestObject = new LoginRequest(username, password);\n      var response = await ServiceDelegate.apiLogin(loginRequestObject);\n\n      if (response.success) {\n        if (response.responseBody === null) {\n          alert(LoginMessage.MESSAGE_DIALOG_INVALIDDATA);\n        } else {\n          try {\n            var jsonResponse = JSON.stringify(response.responseBody[\"token\"]);\n            console.log(jsonResponse);\n\n            if (jsonResponse !== null) {\n              var objectLoginResponse = new LoginResponse(jsonResponse.token);\n              DataManager.ResponseLogin = objectLoginResponse;\n              result = true;\n              alert(\"Usuario correcto\");\n            }\n          } catch {\n            alert(LoginMessage.MESSAGE_DIALOG_INVALIDDATA);\n          }\n        }\n      } else {\n        switch (response.statusCode) {\n          case -100:\n            alert(LoginMessage.MESSAGE_DIALOG_INVALIDDATA);\n            break;\n\n          default:\n            alert(LoginMessage.MESSAGE_DIALOG_SYSTEMERROR);\n            break;\n        }\n      }\n    } else {\n      alert(LoginMessage.MESSAGE_DIALOG_INVALIDDATA);\n    }\n\n    return result;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ntamayo.ADDS/Desktop/programacion/appClimaReactjs/solucion/src/Template/Login/LoginBusiness.js"],"names":["LoginMessage","Validation","DataManager","LoginRequest","LoginResponse","ServiceDelegate","LoginBusiness","accessSession","username","password","result","validateEmail","loginRequestObject","response","apiLogin","success","responseBody","alert","MESSAGE_DIALOG_INVALIDDATA","jsonResponse","JSON","stringify","console","log","objectLoginResponse","token","ResponseLogin","statusCode","MESSAGE_DIALOG_SYSTEMERROR"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AAEA,eAAe,MAAMC,aAAN,CACf;AACI,eAAaC,aAAb,CAA2BC,QAA3B,EAAqCC,QAArC,EAA+C;AAC7C,QAAIC,MAAM,GAAG,KAAb;;AACA,QACE,CAACF,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,KAAK,EAAlC,KACAP,UAAU,CAACU,aAAX,CAAyBH,QAAzB,CADA,IAECC,QAAQ,IAAI,IAAZ,IAAoBA,QAAQ,KAAK,EAHpC,EAIE;AACA,UAAIG,kBAAkB,GAAG,IAAIT,YAAJ,CAAiBK,QAAjB,EAA2BC,QAA3B,CAAzB;AACA,UAAII,QAAQ,GAAG,MAAMR,eAAe,CAACS,QAAhB,CAAyBF,kBAAzB,CAArB;;AACA,UAAIC,QAAQ,CAACE,OAAb,EAAsB;AACpB,YAAIF,QAAQ,CAACG,YAAT,KAA0B,IAA9B,EAAoC;AAClCC,UAAAA,KAAK,CAACjB,YAAY,CAACkB,0BAAd,CAAL;AACD,SAFD,MAEO;AACL,cAAI;AACF,gBAAIC,YAAY,GAAGC,IAAI,CAACC,SAAL,CAAeR,QAAQ,CAACG,YAAT,CAAsB,OAAtB,CAAf,CAAnB;AACAM,YAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;;AACA,gBAAIA,YAAY,KAAK,IAArB,EAA2B;AACzB,kBAAIK,mBAAmB,GAAG,IAAIpB,aAAJ,CAAkBe,YAAY,CAACM,KAA/B,CAA1B;AACAvB,cAAAA,WAAW,CAACwB,aAAZ,GAA4BF,mBAA5B;AACAd,cAAAA,MAAM,GAAG,IAAT;AACAO,cAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;AACF,WATD,CASE,MAAK;AACLA,YAAAA,KAAK,CAACjB,YAAY,CAACkB,0BAAd,CAAL;AACD;AACF;AACF,OAjBD,MAiBO;AACL,gBAAQL,QAAQ,CAACc,UAAjB;AACE,eAAK,CAAC,GAAN;AACEV,YAAAA,KAAK,CAACjB,YAAY,CAACkB,0BAAd,CAAL;AACA;;AACF;AACED,YAAAA,KAAK,CAACjB,YAAY,CAAC4B,0BAAd,CAAL;AACA;AANJ;AAQD;AACF,KAlCD,MAkCO;AACLX,MAAAA,KAAK,CAACjB,YAAY,CAACkB,0BAAd,CAAL;AACD;;AACD,WAAOR,MAAP;AACD;;AAzCL","sourcesContent":["import LoginMessage from './LoginMessage'\r\nimport Validation from '../../Util/Validation'\r\nimport DataManager from '../../Util/DataManager'\r\nimport LoginRequest from '../../Model/LoginModel/LoginRequest';\r\nimport LoginResponse from '../../Model/LoginModel/LoginResponse';\r\nimport ServiceDelegate from '../../Service/Delegate/ServiceDelegate'\r\n\r\nexport default class LoginBusiness\r\n{\r\n    static async accessSession(username, password) {\r\n      var result = false;\r\n      if (\r\n        (username != null || username !== '') &&\r\n        Validation.validateEmail(username) &&\r\n        (password != null && password !== '')\r\n      ) {\r\n        var loginRequestObject = new LoginRequest(username, password);\r\n        var response = await ServiceDelegate.apiLogin(loginRequestObject);\r\n        if (response.success) {\r\n          if (response.responseBody === null) {\r\n            alert(LoginMessage.MESSAGE_DIALOG_INVALIDDATA)\r\n          } else {\r\n            try {\r\n              var jsonResponse = JSON.stringify(response.responseBody[\"token\"]);\r\n              console.log(jsonResponse);\r\n              if (jsonResponse !== null) {\r\n                var objectLoginResponse = new LoginResponse(jsonResponse.token);\r\n                DataManager.ResponseLogin = objectLoginResponse;\r\n                result = true;\r\n                alert(\"Usuario correcto\"); \r\n              }\r\n            } catch{\r\n              alert(LoginMessage.MESSAGE_DIALOG_INVALIDDATA);\r\n            }\r\n          }\r\n        } else {\r\n          switch (response.statusCode) {\r\n            case -100:\r\n              alert(LoginMessage.MESSAGE_DIALOG_INVALIDDATA);\r\n              break;\r\n            default:\r\n              alert(LoginMessage.MESSAGE_DIALOG_SYSTEMERROR);\r\n              break;\r\n          }\r\n        }\r\n      } else {\r\n        alert(LoginMessage.MESSAGE_DIALOG_INVALIDDATA);\r\n      }\r\n      return result;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}